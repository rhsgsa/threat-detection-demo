apiVersion: batch/v1
kind: Job
metadata:
  labels:
    job: setup-s3
  name: setup-s3
spec:
  template:
    metadata:
      labels:
        job: setup-s3
    spec:
      serviceAccountName: setup-s3
      containers:
      - image: ghcr.io/kwkoo/s3-utils
        name: setup-s3
        command:
        - /bin/bash
        - "-c"
        - |
          until curl -s -o /dev/null $AWS_ENDPOINT_URL_S3 2>/dev/null; do
            echo "waiting for minio API..."
            sleep 5
          done
          mc alias set minio $AWS_ENDPOINT_URL_S3 $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY

          echo "creating bucket..."
          mc mb minio/models

          echo "uploading model to bucket..."
          python3 ./s3_utils.py

          # we cannot upload the 34b model the usual way because it is too large
          cd /scratch
          echo "downloading llava model (${LLAVA_URL})..."
          curl -LO "$LLAVA_URL"
          mc put *.gguf minio/models/llava/
        env:
        - name: MODELS
          value: "/data/mistral.txt,/data/llava.txt"
        # https://huggingface.co/cjpais/llava-1.6-mistral-7b-gguf/resolve/main/llava-v1.6-mistral-7b.Q6_K.gguf
        # https://huggingface.co/cjpais/llava-v1.6-vicuna-13b-gguf/resolve/main/llava-v1.6-vicuna-13b.Q6_K.gguf
        # https://huggingface.co/cjpais/llava-v1.6-34B-gguf/resolve/main/llava-v1.6-34b.Q4_K_M.gguf
        # https://huggingface.co/cmp-nct/llava-1.6-gguf/resolve/main/ggml-yi-34b-f16-q_5_k.gguf
        - name: LLAVA_URL
          value: "https://huggingface.co/cjpais/llava-v1.6-vicuna-13b-gguf/resolve/main/llava-v1.6-vicuna-13b.Q6_K.gguf"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio
              key: MINIO_ROOT_USER
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio
              key: MINIO_ROOT_PASSWORD
        - name: AWS_ENDPOINT_URL_S3
          value: "http://minio:9000"
        - name: MC_INSECURE
          value: "true"
        volumeMounts:
        - name: data
          mountPath: /data
          readOnly: true
        - name: scratch
          mountPath: /scratch
        resources: {}
      restartPolicy: Never
      volumes:
      - name: data
        configMap:
          name: setup-s3
      - name: scratch
        emptyDir: {}
status: {}