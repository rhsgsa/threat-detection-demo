version: "3.5"

services:

  image-acquirer:
    container_name: image-acquirer
    image: "ghcr.io/kwkoo/image-acquirer"
    environment:
    - CAMERA=/videos/video.mp4
    #- INTERESTED_CLASSES=1,2
    - MQTT_SERVER=mqtt
    - MQTT_PORT=1883
    - MQTT_TOPIC=alerts
    - MODEL=NCS_YOLOv8-20Epochs.pt
    - CONFIDENCE=0.5
    ports:
    - 8000:8080
    volumes:
    - ../../../Gun_Video.mp4:/videos/video.mp4
    #- ../../image-acquirer/app/app.py:/app/app.py
    depends_on:
    - mqtt

  mqtt:
    container_name: mqtt
    image: "docker.io/library/eclipse-mosquitto:2.0.18-openssl"
    ports:
    - 1883:1883
    volumes:
    - ../../mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro,z

  frontend:
    container_name: frontend
    image: "ghcr.io/rhsgsa/threat-frontend:1.91"
    environment:
    - MQTTBROKER=tcp://mqtt:1883
    - PORT=8080
    #- DOCROOT=/docroot
    - ALERTSTOPIC=alerts
    - LLMURL=http://ollama:11434/api/generate
    ports:
    - 8080:8080
    depends_on:
    - mqtt

  ollama:
    container_name: ollama
    image: "ollama/ollama:0.1.28"
    environment:
    - OLLAMA_ORIGINS=*
    ports:
    - 11434:11434

  imagepull:
    container_name: imagepull
    image: "docker.io/curlimages/curl:7.78.0"
    environment:
    - MODEL=llava
    command:
    - sh
    - "-c"
    - |
      until curl ollama:11434 >/dev/null 2>/dev/null; do
        sleep 5
      done
      echo "pulling $$MODEL..."
      curl ollama:11434/api/pull -d '{"name":"'"$$MODEL"'"}'
    depends_on:
    - ollama
